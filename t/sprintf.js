;(function () {
  var validate = function (Ω, tests) {
    for (var i = 0; i < tests.length; i++) {
      var test = tests[i];
      if (!test.m) {
        test.m = 'sprintf("'+test.f+'", '+JSON.stringify(test.a)+')';
      }
      Ω.equal(sprintf.apply(undefined, [test.f].concat(test.a)), test.e, test.m);
    }
  };

  QUnit.module("sprintf");
  QUnit.test("missing arguments", function (Ω) {
    validate(Ω, [
      { f: 'missing: %d', a:[], e: 'missing: (!missing)' },
      { f: 'missing: %i', a:[], e: 'missing: (!missing)' },
      { f: 'missing: %o', a:[], e: 'missing: (!missing)' },
      { f: 'missing: %u', a:[], e: 'missing: (!missing)' },
      { f: 'missing: %x', a:[], e: 'missing: (!missing)' },
      { f: 'missing: %X', a:[], e: 'missing: (!missing)' },
      { f: 'missing: %e', a:[], e: 'missing: (!missing)' },
      { f: 'missing: %E', a:[], e: 'missing: (!missing)' },
      { f: 'missing: %f', a:[], e: 'missing: (!missing)' },
      { f: 'missing: %F', a:[], e: 'missing: (!missing)' },
      { f: 'missing: %g', a:[], e: 'missing: (!missing)' },
      { f: 'missing: %G', a:[], e: 'missing: (!missing)' },
      { f: 'missing: %c', a:[], e: 'missing: (!missing)' },
      { f: 'missing: %s', a:[], e: 'missing: (!missing)' }
    ]);
  });

  QUnit.test("undefined string handling", function (Ω) {
    validate(Ω, [
      { f: 'undef: %s',        a:[undefined], e: 'undef: (undefined)' },
      { f: 'undef: %s',        a:[],          e: 'undef: (!missing)' },
      { f: 'undef: %s',        a:[null],      e: 'undef: (null)' }
    ]);
  });

  QUnit.test("basic format specifiers", function (Ω) {
    validate(Ω, [
      { f: 'a literal string', a:[],      e: 'a literal string' },
      { f: 'a literal %%',     a:[],      e: 'a literal %' },

      { f: '%%d = [%d]',       a:[ 12345], e: '%d = [12345]' },
      { f: '%%i = [%i]',       a:[ 12345], e: '%i = [12345]' },
      { f: '%%i = [%i]',       a:[-12345], e: '%i = [-12345]' },

      { f: '%%o = [%o]',       a:[ 12345], e: '%o = [30071]' },

      { f: '%%u = [%u]',       a:[ 12345], e: '%u = [12345]' },
      { f: '%%u = [%u]',       a:[-12345], e: '%u = [4294954951]' },

      { f: '%%x = [%x]',       a:[ 12345], e: '%x = [3039]' },
      { f: '%%x = [%x]',       a:[-12345], e: '%x = [ffffcfc7]' },
      { f: '%%X = [%X]',       a:[ 12345], e: '%X = [3039]' },
      { f: '%%X = [%X]',       a:[-12345], e: '%X = [FFFFCFC7]' },

      { f: '%%e = [%e]',       a:[ 1.2345], e: '%e = [1.2345e+0]' },
      { f: '%%e = [%e]',       a:[-1.2345], e: '%e = [-1.2345e+0]' },
      { f: '%%E = [%E]',       a:[ 1.2345], e: '%E = [1.2345E+0]' },
      { f: '%%E = [%E]',       a:[-1.2345], e: '%E = [-1.2345E+0]' },

      { f: '%%f = [%f]',       a:[ 1.2345], e: '%f = [1.2345]' },
      { f: '%%g = [%g]',       a:[ 1.2345], e: '%g = [1.2345]' },
      { f: '%%F = [%F]',       a:[ 1.2345], e: '%F = [1.2345]' },
      { f: '%%G = [%G]',       a:[ 1.2345], e: '%G = [1.2345]' },

      { f: '%%c = [%c]',       a:[42],      e: '%c = [*]' },
      { f: '%%s = [%s]',       a:["text!"], e: '%s = [text!]' }
    ]);
  });

  QUnit.test("field width modifiers", function (Ω) {
    validate(Ω, [
      { f: '|%1d|',   a: [12345], e:'|12345|' },
      { f: '|%10d|',  a: [12345], e:'|     12345|' },
      { f: '|%010d|', a: [12345], e:'|0000012345|' },

      { f: '|%1i|',   a: [12345], e:'|12345|' },
      { f: '|%10i|',  a: [12345], e:'|     12345|' },
      { f: '|%010i|', a: [12345], e:'|0000012345|' },

      { f: '|%1u|',   a: [12345], e:'|12345|' },
      { f: '|%10u|',  a: [12345], e:'|     12345|' },
      { f: '|%010u|', a: [12345], e:'|0000012345|' },

      { f: '|%1o|',   a: [12345], e:'|30071|' },
      { f: '|%10o|',  a: [12345], e:'|     30071|' },
      { f: '|%010o|', a: [12345], e:'|0000030071|' },

      { f: '|%1x|',   a: [ 12345], e:'|3039|' },
      { f: '|%10x|',  a: [ 12345], e:'|      3039|' },
      { f: '|%010x|', a: [ 12345], e:'|0000003039|' },
      { f: '|%1x|',   a: [-12345], e:'|ffffcfc7|' },
      { f: '|%10x|',  a: [-12345], e:'|  ffffcfc7|' },
      { f: '|%010x|', a: [-12345], e:'|00ffffcfc7|' },

      { f: '|%1X|',   a: [ 12345], e:'|3039|' },
      { f: '|%10X|',  a: [ 12345], e:'|      3039|' },
      { f: '|%010X|', a: [ 12345], e:'|0000003039|' },
      { f: '|%1X|',   a: [-12345], e:'|FFFFCFC7|' },
      { f: '|%10X|',  a: [-12345], e:'|  FFFFCFC7|' },
      { f: '|%010X|', a: [-12345], e:'|00FFFFCFC7|' },

      { f: '|%2e|',   a: [ 12.345], e:'|1.2345e+1|' },
      { f: '|%20e|',  a: [ 12.345], e:'|           1.2345e+1|' },
      { f: '|%020e|', a: [ 12.345], e:'|000000000001.2345e+1|' },
      { f: '|%2e|',   a: [-12.345], e:'|-1.2345e+1|' },
      { f: '|%20e|',  a: [-12.345], e:'|          -1.2345e+1|' },
      { f: '|%020e|', a: [-12.345], e:'|-00000000001.2345e+1|' },

      { f: '|%2E|',   a: [ 12.345], e:'|1.2345E+1|' },
      { f: '|%20E|',  a: [ 12.345], e:'|           1.2345E+1|' },
      { f: '|%020E|', a: [ 12.345], e:'|000000000001.2345E+1|' },
      { f: '|%2E|',   a: [-12.345], e:'|-1.2345E+1|' },
      { f: '|%20E|',  a: [-12.345], e:'|          -1.2345E+1|' },
      { f: '|%020E|', a: [-12.345], e:'|-00000000001.2345E+1|' },

      { f: '|%1f|',   a: [ 12.345], e:'|12.345|' },
      { f: '|%10f|',  a: [ 12.345], e:'|    12.345|' },
      { f: '|%010f|', a: [ 12.345], e:'|000012.345|' },
      { f: '|%1f|',   a: [-12.345], e:'|-12.345|' },
      { f: '|%10f|',  a: [-12.345], e:'|   -12.345|' },
      { f: '|%010f|', a: [-12.345], e:'|-00012.345|' },

      { f: '|%1g|',   a: [ 12.345], e:'|12.345|' },
      { f: '|%10g|',  a: [ 12.345], e:'|    12.345|' },
      { f: '|%010g|', a: [ 12.345], e:'|000012.345|' },
      { f: '|%1g|',   a: [-12.345], e:'|-12.345|' },
      { f: '|%10g|',  a: [-12.345], e:'|   -12.345|' },
      { f: '|%010g|', a: [-12.345], e:'|-00012.345|' },

      { f: '|%1F|',   a: [ 12.345], e:'|12.345|' },
      { f: '|%10F|',  a: [ 12.345], e:'|    12.345|' },
      { f: '|%010F|', a: [ 12.345], e:'|000012.345|' },
      { f: '|%1F|',   a: [-12.345], e:'|-12.345|' },
      { f: '|%10F|',  a: [-12.345], e:'|   -12.345|' },
      { f: '|%010F|', a: [-12.345], e:'|-00012.345|' },

      { f: '|%1G|',   a: [ 12.345], e:'|12.345|' },
      { f: '|%10G|',  a: [ 12.345], e:'|    12.345|' },
      { f: '|%010G|', a: [ 12.345], e:'|000012.345|' },
      { f: '|%1G|',   a: [-12.345], e:'|-12.345|' },
      { f: '|%10G|',  a: [-12.345], e:'|   -12.345|' },
      { f: '|%010G|', a: [-12.345], e:'|-00012.345|' },

      { f: '%10s',   a: ["hello!"], e: "    hello!", },
      { f: '%010s',  a: ["hello!"], e: "0000hello!", },
    ]);
  });

  QUnit.test("flag (#) handling - alternate form", function (Ω) {
    validate(Ω, [
      { f: '%#04x', a: [48879], e: '0xbeef' },
      { f: '%#06x', a: [48879], e: '0xbeef' },
      { f: '%#08x', a: [48879], e: '0x00beef' },
      { f: '%#8x',  a: [48879], e: '  0xbeef' },

      { f: '%#04X', a: [48879], e: '0XBEEF' },
      { f: '%#06X', a: [48879], e: '0XBEEF' },
      { f: '%#08X', a: [48879], e: '0X00BEEF' },
      { f: '%#8X',  a: [48879], e: '  0XBEEF' },

      { f: '%#04o', a: [420],   e: '0644' },
      { f: '%#06o', a: [420],   e: '000644' },
      { f: '%#6o',  a: [420],   e: '  0644' }
    ]);
  });

  QUnit.test("flag (-) handling - left alignment", function (Ω) {
    validate(Ω, [
      { f: '%-10d',  a: [12345],    e: "12345     ", },
      { f: '%-010d', a: [12345],    e: "12345     ", },
      { f: '%-10i',  a: [12345],    e: "12345     ", },
      { f: '%-010i', a: [12345],    e: "12345     ", },

      { f: '|%-10u|',  a: [12345], e:'|12345     |' },
      { f: '|%-010u|', a: [12345], e:'|12345     |' },

      { f: '|%-10o|',  a: [12345], e:'|30071     |' },
      { f: '|%-010o|', a: [12345], e:'|30071     |' },

      { f: '|%-10x|',  a: [ 12345], e:'|3039      |' },
      { f: '|%-010x|', a: [ 12345], e:'|3039      |' },
      { f: '|%-10x|',  a: [-12345], e:'|ffffcfc7  |' },
      { f: '|%-010x|', a: [-12345], e:'|ffffcfc7  |' },

      { f: '|%-10X|',  a: [ 12345], e:'|3039      |' },
      { f: '|%-010X|', a: [ 12345], e:'|3039      |' },
      { f: '|%-10X|',  a: [-12345], e:'|FFFFCFC7  |' },
      { f: '|%-010X|', a: [-12345], e:'|FFFFCFC7  |' },

      { f: '|%-20e|',  a: [ 12.345], e:'|1.2345e+1           |' },
      { f: '|%-020e|', a: [ 12.345], e:'|1.2345e+1           |' },
      { f: '|%-20e|',  a: [-12.345], e:'|-1.2345e+1          |' },
      { f: '|%-020e|', a: [-12.345], e:'|-1.2345e+1          |' },

      { f: '|%-20E|',  a: [ 12.345], e:'|1.2345E+1           |' },
      { f: '|%-020E|', a: [ 12.345], e:'|1.2345E+1           |' },
      { f: '|%-20E|',  a: [-12.345], e:'|-1.2345E+1          |' },
      { f: '|%-020E|', a: [-12.345], e:'|-1.2345E+1          |' },

      { f: '|%-10f|',  a: [ 12.345], e:'|12.345    |' },
      { f: '|%-010f|', a: [ 12.345], e:'|12.345    |' },
      { f: '|%-10f|',  a: [-12.345], e:'|-12.345   |' },
      { f: '|%-010f|', a: [-12.345], e:'|-12.345   |' },

      { f: '|%-10g|',  a: [ 12.345], e:'|12.345    |' },
      { f: '|%-010g|', a: [ 12.345], e:'|12.345    |' },
      { f: '|%-10g|',  a: [-12.345], e:'|-12.345   |' },
      { f: '|%-010g|', a: [-12.345], e:'|-12.345   |' },

      { f: '|%-10F|',  a: [ 12.345], e:'|12.345    |' },
      { f: '|%-010F|', a: [ 12.345], e:'|12.345    |' },
      { f: '|%-10F|',  a: [-12.345], e:'|-12.345   |' },
      { f: '|%-010F|', a: [-12.345], e:'|-12.345   |' },

      { f: '|%-10G|',  a: [ 12.345], e:'|12.345    |' },
      { f: '|%-010G|', a: [ 12.345], e:'|12.345    |' },
      { f: '|%-10G|',  a: [-12.345], e:'|-12.345   |' },
      { f: '|%-010G|', a: [-12.345], e:'|-12.345   |' },

      { f: '%10s',   a: ["hello!"], e: "    hello!", },
      { f: '%-10s',  a: ["hello!"], e: "hello!    ", },
      { f: '%-010s', a: ["hello!"], e: "hello!    ", }
    ]);
  });

  QUnit.test("flag (+) handling - positive sign", function (Ω) {
    validate(Ω, [
      { f: '|%+d|',     a: [12345], e: '|+12345|' },
      { f: '|%+10d|',   a: [12345], e: '|    +12345|' },
      { f: '|%+010d|',  a: [12345], e: '|+000012345|' },
      { f: '|%+-10d|',  a: [12345], e: '|+12345    |' },
      { f: '|%+-010d|', a: [12345], e: '|+12345    |' },

      { f: '|%+i|',     a: [12345], e: '|+12345|' },
      { f: '|%+10i|',   a: [12345], e: '|    +12345|' },
      { f: '|%+010i|',  a: [12345], e: '|+000012345|' },
      { f: '|%+-10i|',  a: [12345], e: '|+12345    |' },
      { f: '|%+-010i|', a: [12345], e: '|+12345    |' },

      { f: '|%+u|',     a: [12345], e: '|+12345|' },
      { f: '|%+10u|',   a: [12345], e: '|    +12345|' },
      { f: '|%+010u|',  a: [12345], e: '|+000012345|' },
      { f: '|%+-10u|',  a: [12345], e: '|+12345    |' },
      { f: '|%+-010u|', a: [12345], e: '|+12345    |' },

      { f: '|%+#o|',    a: [12345], e: '|030071|' },

      { f: '|%+#x|',    a: [12345], e: '|0x3039|' },
      { f: '|%+#X|',    a: [12345], e: '|0X3039|' },

      { f: '|%+2e|',    a: [ 12.345], e:'|+1.2345e+1|' },
      { f: '|%+20e|',   a: [ 12.345], e:'|          +1.2345e+1|' },
      { f: '|%+020e|',  a: [ 12.345], e:'|+00000000001.2345e+1|' },
      { f: '|%+-020e|', a: [ 12.345], e:'|+1.2345e+1          |' },
      { f: '|%+2e|',    a: [-12.345], e:'|-1.2345e+1|' },
      { f: '|%+20e|',   a: [-12.345], e:'|          -1.2345e+1|' },
      { f: '|%+020e|',  a: [-12.345], e:'|-00000000001.2345e+1|' },
      { f: '|%+-020e|', a: [-12.345], e:'|-1.2345e+1          |' },

      { f: '|%+2E|',    a: [ 12.345], e:'|+1.2345E+1|' },
      { f: '|%+20E|',   a: [ 12.345], e:'|          +1.2345E+1|' },
      { f: '|%+020E|',  a: [ 12.345], e:'|+00000000001.2345E+1|' },
      { f: '|%+-020E|', a: [ 12.345], e:'|+1.2345E+1          |' },
      { f: '|%+2E|',    a: [-12.345], e:'|-1.2345E+1|' },
      { f: '|%+20E|',   a: [-12.345], e:'|          -1.2345E+1|' },
      { f: '|%+020E|',  a: [-12.345], e:'|-00000000001.2345E+1|' },
      { f: '|%+-020E|', a: [-12.345], e:'|-1.2345E+1          |' },

      { f: '|%+1f|',    a: [ 12.345], e:'|+12.345|' },
      { f: '|%+10f|',   a: [ 12.345], e:'|   +12.345|' },
      { f: '|%+010f|',  a: [ 12.345], e:'|+00012.345|' },
      { f: '|%+-010f|', a: [ 12.345], e:'|+12.345   |' },
      { f: '|%+1f|',    a: [-12.345], e:'|-12.345|' },
      { f: '|%+10f|',   a: [-12.345], e:'|   -12.345|' },
      { f: '|%+010f|',  a: [-12.345], e:'|-00012.345|' },
      { f: '|%+-010f|', a: [-12.345], e:'|-12.345   |' },

      { f: '|%+1g|',    a: [ 12.345], e:'|+12.345|' },
      { f: '|%+10g|',   a: [ 12.345], e:'|   +12.345|' },
      { f: '|%+010g|',  a: [ 12.345], e:'|+00012.345|' },
      { f: '|%+-010g|', a: [ 12.345], e:'|+12.345   |' },
      { f: '|%+1g|',    a: [-12.345], e:'|-12.345|' },
      { f: '|%+10g|',   a: [-12.345], e:'|   -12.345|' },
      { f: '|%+010g|',  a: [-12.345], e:'|-00012.345|' },
      { f: '|%+-010g|', a: [-12.345], e:'|-12.345   |' },

      { f: '|%+1F|',    a: [ 12.345], e:'|+12.345|' },
      { f: '|%+10F|',   a: [ 12.345], e:'|   +12.345|' },
      { f: '|%+010F|',  a: [ 12.345], e:'|+00012.345|' },
      { f: '|%+-010F|', a: [ 12.345], e:'|+12.345   |' },
      { f: '|%+1F|',    a: [-12.345], e:'|-12.345|' },
      { f: '|%+10F|',   a: [-12.345], e:'|   -12.345|' },
      { f: '|%+010F|',  a: [-12.345], e:'|-00012.345|' },
      { f: '|%+-010F|', a: [-12.345], e:'|-12.345   |' },

      { f: '|%+1G|',    a: [ 12.345], e:'|+12.345|' },
      { f: '|%+10G|',   a: [ 12.345], e:'|   +12.345|' },
      { f: '|%+010G|',  a: [ 12.345], e:'|+00012.345|' },
      { f: '|%+-010G|', a: [ 12.345], e:'|+12.345   |' },
      { f: '|%+1G|',    a: [-12.345], e:'|-12.345|' },
      { f: '|%+10G|',   a: [-12.345], e:'|   -12.345|' },
      { f: '|%+010G|',  a: [-12.345], e:'|-00012.345|' },
      { f: '|%+-010G|', a: [-12.345], e:'|-12.345   |' }
    ]);
  });

  QUnit.test("flag ( ) handling - blank space before positive numbers", function (Ω) {
    validate(Ω, [
      { f: '|% d|',     a: [12345], e: '| 12345|' },
      { f: '|% 10d|',   a: [12345], e: '|     12345|' },
      { f: '|% 010d|',  a: [12345], e: '| 000012345|' },
      { f: '|% -10d|',  a: [12345], e: '| 12345    |' },
      { f: '|% -010d|', a: [12345], e: '| 12345    |' },

      { f: '|% i|',     a: [12345], e: '| 12345|' },
      { f: '|% 10i|',   a: [12345], e: '|     12345|' },
      { f: '|% 010i|',  a: [12345], e: '| 000012345|' },
      { f: '|% -10i|',  a: [12345], e: '| 12345    |' },
      { f: '|% -010i|', a: [12345], e: '| 12345    |' },

      { f: '|% u|',     a: [12345], e: '| 12345|' },
      { f: '|% 10u|',   a: [12345], e: '|     12345|' },
      { f: '|% 010u|',  a: [12345], e: '| 000012345|' },
      { f: '|% -10u|',  a: [12345], e: '| 12345    |' },
      { f: '|% -010u|', a: [12345], e: '| 12345    |' },

      { f: '|% #o|',    a: [12345], e: '|030071|' },

      { f: '|% #x|',    a: [12345], e: '|0x3039|' },
      { f: '|% #X|',    a: [12345], e: '|0X3039|' },

      { f: '|% 2e|',    a: [ 12.345], e:'| 1.2345e+1|' },
      { f: '|% 20e|',   a: [ 12.345], e:'|           1.2345e+1|' },
      { f: '|% 020e|',  a: [ 12.345], e:'| 00000000001.2345e+1|' },
      { f: '|% -020e|', a: [ 12.345], e:'| 1.2345e+1          |' },
      { f: '|% 2e|',    a: [-12.345], e:'|-1.2345e+1|' },
      { f: '|% 20e|',   a: [-12.345], e:'|          -1.2345e+1|' },
      { f: '|% 020e|',  a: [-12.345], e:'|-00000000001.2345e+1|' },
      { f: '|% -020e|', a: [-12.345], e:'|-1.2345e+1          |' },

      { f: '|% 2E|',    a: [ 12.345], e:'| 1.2345E+1|' },
      { f: '|% 20E|',   a: [ 12.345], e:'|           1.2345E+1|' },
      { f: '|% 020E|',  a: [ 12.345], e:'| 00000000001.2345E+1|' },
      { f: '|% -020E|', a: [ 12.345], e:'| 1.2345E+1          |' },
      { f: '|% 2E|',    a: [-12.345], e:'|-1.2345E+1|' },
      { f: '|% 20E|',   a: [-12.345], e:'|          -1.2345E+1|' },
      { f: '|% 020E|',  a: [-12.345], e:'|-00000000001.2345E+1|' },
      { f: '|% -020E|', a: [-12.345], e:'|-1.2345E+1          |' },

      { f: '|% 1f|',    a: [ 12.345], e:'| 12.345|' },
      { f: '|% 10f|',   a: [ 12.345], e:'|    12.345|' },
      { f: '|% 010f|',  a: [ 12.345], e:'| 00012.345|' },
      { f: '|% -010f|', a: [ 12.345], e:'| 12.345   |' },
      { f: '|% 1f|',    a: [-12.345], e:'|-12.345|' },
      { f: '|% 10f|',   a: [-12.345], e:'|   -12.345|' },
      { f: '|% 010f|',  a: [-12.345], e:'|-00012.345|' },
      { f: '|% -010f|', a: [-12.345], e:'|-12.345   |' },

      { f: '|% 1g|',    a: [ 12.345], e:'| 12.345|' },
      { f: '|% 10g|',   a: [ 12.345], e:'|    12.345|' },
      { f: '|% 010g|',  a: [ 12.345], e:'| 00012.345|' },
      { f: '|% -010g|', a: [ 12.345], e:'| 12.345   |' },
      { f: '|% 1g|',    a: [-12.345], e:'|-12.345|' },
      { f: '|% 10g|',   a: [-12.345], e:'|   -12.345|' },
      { f: '|% 010g|',  a: [-12.345], e:'|-00012.345|' },
      { f: '|% -010g|', a: [-12.345], e:'|-12.345   |' },

      { f: '|% 1F|',    a: [ 12.345], e:'| 12.345|' },
      { f: '|% 10F|',   a: [ 12.345], e:'|    12.345|' },
      { f: '|% 010F|',  a: [ 12.345], e:'| 00012.345|' },
      { f: '|% -010F|', a: [ 12.345], e:'| 12.345   |' },
      { f: '|% 1F|',    a: [-12.345], e:'|-12.345|' },
      { f: '|% 10F|',   a: [-12.345], e:'|   -12.345|' },
      { f: '|% 010F|',  a: [-12.345], e:'|-00012.345|' },
      { f: '|% -010F|', a: [-12.345], e:'|-12.345   |' },

      { f: '|% 1G|',    a: [ 12.345], e:'| 12.345|' },
      { f: '|% 10G|',   a: [ 12.345], e:'|    12.345|' },
      { f: '|% 010G|',  a: [ 12.345], e:'| 00012.345|' },
      { f: '|% -010G|', a: [ 12.345], e:'| 12.345   |' },
      { f: '|% 1G|',    a: [-12.345], e:'|-12.345|' },
      { f: '|% 10G|',   a: [-12.345], e:'|   -12.345|' },
      { f: '|% 010G|',  a: [-12.345], e:'|-00012.345|' },
      { f: '|% -010G|', a: [-12.345], e:'|-12.345   |' }
    ]);
  });

  QUnit.test("field precision modifiers", function (Ω) {
    validate(Ω, [
      { f: '|%9.3f|', a: [1.23],   e: '|    1.230|' },
      { f: '|%5.3f|', a: [1.23],   e: '|1.230|' },
      { f: '|%1.3f|', a: [1.23],   e: '|1.230|' },

      { f: '|%5.3f|', a: [1.2345], e: '|1.234|' },
      { f: '|%5.3f|', a: [1.2346], e: '|1.235|' },

      { f: '|%.0s|',  a: ['a really long string'], e: '||' },
      { f: '|%4.0s|', a: ['a really long string'], e: '|    |' },
      { f: '|%.10s|', a: ['a really long string'], e: '|a really l|' },
      { f: '|%9.5s|', a: ['a really long string'], e: '|    a rea|' },

      { f: '|%8.4x|',  a: [0xcafe], e: '|    cafe|' },
      { f: '|%8.6x|',  a: [0xcafe], e: '|  00cafe|' },
      { f: '|%#8.4x|', a: [0xcafe], e: '|  0xcafe|' },
      { f: '|%#8.6x|', a: [0xcafe], e: '|0x00cafe|' },

      { f: '|%8.4X|',  a: [0xcafe], e: '|    CAFE|' },
      { f: '|%8.6X|',  a: [0xcafe], e: '|  00CAFE|' },
      { f: '|%#8.4X|', a: [0xcafe], e: '|  0XCAFE|' },
      { f: '|%#8.6X|', a: [0xcafe], e: '|0X00CAFE|' },

      { f: '|%8.4o|',  a: [420], e: '|    0644|' },
      { f: '|%8.6o|',  a: [420], e: '|  000644|' },
      { f: '|%#8.4o|', a: [420], e: '|    0644|' },
      { f: '|%#8.6o|', a: [420], e: '|  000644|' }
    ]);
  });

  QUnit.test("field length  modifiers", function (Ω) {
    validate(Ω, [
      /* 8-bit */
      { f: '|%hhu|', a:[ 1], e: '|1|' },
      { f: '|%hhu|', a:[-1], e: '|255|' },

      /* 16-bit */
      { f: '|%hu|', a:[ 1], e: '|1|' },
      { f: '|%hu|', a:[-1], e: '|65535|' },

      /* 32-bit */
      { f: '|%u|', a:[ 1], e: '|1|' },
      { f: '|%u|', a:[-1], e: '|4294967295|' }

      /* tests for 64- and 128-bit are problematic,
         given Javascript built-in precision. */
    ]);
  });
})();
